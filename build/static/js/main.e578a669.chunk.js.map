{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/persons.js","components/App.js","index.js"],"names":["Filter","nameFilter","setFilterName","value","onChange","PersonForm","newName","handleNameChange","newNumber","handleNumberChange","addPerson","onSubmit","type","Persons","persons","deletePerson","filter","person","name","toLowerCase","includes","map","key","number","onClick","Notification","message","success","notificationStyle","color","fontStyle","fontSize","backgroundColor","borderRadius","padding","marginBottom","borderStyle","borderColor","className","style","url","response","axios","get","console","log","data","then","newPerson","request","post","id","put","persontoDelete","delete","App","useState","setPersons","setNewName","setNewNumber","setNameFilter","notification","setNotification","setSuccess","useEffect","personsService","event","target","preventDefault","existingPersons","existingPerson","length","window","alert","confirm","personObject","concat","setTimeout","catch","error","personToDelete","newPersons","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e578a669.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({nameFilter, setFilterName}) => (\n  <div>\n    filter shown with <input value={nameFilter} onChange={setFilterName} />\n  </div>\n)\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = ({newName, handleNameChange, newNumber, handleNumberChange, addPerson}) => (\n  <form onSubmit={addPerson}>\n    <div>\n      name: <input value={newName} onChange={handleNameChange} />\n    </div>\n    <div>\n      number: <input value={newNumber} onChange={handleNumberChange} />\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>  \n)\n\nexport default PersonForm","import React from 'react'\n\nconst Persons = ({persons, nameFilter, deletePerson}) => (\n  <ul>\n    {persons\n       .filter(person => person.name.toLowerCase().includes(nameFilter.toLowerCase()))\n       .map(person =>\n         <li key={person.name}>\n           {person.name} {person.number}\n           <button onClick={() => deletePerson(person)}>delete</button>\n         </li>)}\n  </ul>\n)\n\nexport default Persons","import React from 'react'\n\nconst Notification = ({ message, success }) => {\n    if (message === null) {\n        return null\n    }\n\n    let notificationStyle = {}\n    if (success) {\n        notificationStyle = {\n            color: 'green',\n            fontStyle: 'italic',\n            fontSize: 20,\n            backgroundColor: 'lightgrey',\n            borderRadius: 5,\n            padding: 10,\n            marginBottom: 10,\n            borderStyle: 'solid',\n            borderColor: 'green'\n        }\n    } else {\n        notificationStyle = {\n            color: 'red',\n            fontStyle: 'italic',\n            fontSize: 20,\n            backgroundColor: 'lightgrey',\n            borderRadius: 5,\n            padding: 10,\n            marginBottom: 10,\n            borderStyle: 'solid',\n            borderColor: 'red'\n        }\n    }\n\n    return (\n        <div className=\"notification\"\n             style={notificationStyle}>\n        {message}\n        </div>\n    )\n}\n\nexport default Notification","import axios from 'axios'\n\nconst url = '/api/persons'\n\nconst getAll = () => {\n  const response = axios.get(url)\n  console.log(response.data)\n  return response.then(response => response.data)\n}\n\nconst add = (person, newPerson) => {\n  let message = null\n  let request = null\n  if (newPerson) {\n    request = axios.post(url, person)\n    message = `added ${person.name} ${person.id}`\n  } else {\n    request = axios.put(`${url}/${person.id}`, person)\n    message = `updated ${person.name} ${person.id}`\n  }\n  return request.then(console.log(message))\n}\n\nconst deletePerson = (persontoDelete) => {\n  const request = axios.delete(`${url}/${persontoDelete.id}`)\n  return request.then(console.log(`removed ${persontoDelete.name}`))\n}\n\nexport default {getAll, add, deletePerson}","import React, { useState, useEffect } from 'react'\nimport Filter from './Filter'\nimport PersonForm from './PersonForm'\nimport Persons from './Persons'\nimport Notification from './Notification'\nimport personsService from '../services/persons'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ nameFilter, setNameFilter] = useState('')\n  const [ notification, setNotification ] = useState(null)\n  const [ success, setSuccess ] = useState(false)\n\n  const hook = () => {\n    personsService.getAll().then(persons => setPersons(persons))\n  }\n  useEffect(hook, [])\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const existingPersons = persons.filter(person => person.name === newName)\n    const existingPerson = existingPersons.length === 1 ? existingPersons[0] : null\n    if (existingPerson !== null) {\n      if (existingPerson.number === newNumber) {\n        window.alert(`${newName} is already added to phonebook`)\n        return\n      } else {\n        const addNewNumber =\n          window.confirm(`${newName} is already added to phonebook, replace the old number with the new one?`)\n        if (!addNewNumber) {\n          return\n        }\n      }\n    }\n    const personObject = {\n      name: existingPerson === null ? newName : existingPerson.name,\n      number: newNumber,\n      id: existingPerson === null ? persons.length + 1 : existingPerson.id\n    }\n\n    if (existingPerson !== null) {\n      setPersons(persons.filter(person => person.id !== existingPerson.id).concat(personObject))\n    } else {\n      setPersons(persons.concat(personObject))\n    }\n    personsService\n      .add(personObject, existingPerson === null)\n      .then(() => {\n        setNotification(`Added/updated ${personObject.name}`)\n        setSuccess(true)\n        setTimeout(() => {\n          setNotification(null)\n          setSuccess(false)\n        }, 3000)\n      })\n      .catch(error => {\n        setNotification(\n          `Information from ${personObject.name} has already been removed from the server`\n        )\n        setTimeout(() => {\n          setNotification(null)\n        }, 3000)\n        setPersons(persons.filter(person => person.id !== personObject.id))\n      })\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const setFilterName = (event) => {\n    setNameFilter(event.target.value)\n  }\n\n  const deletePerson = (personToDelete) => {\n    const result = window.confirm(`Delete ${personToDelete.name} ?`)\n    if (result) {\n      const newPersons = persons.filter(person => person.id !== personToDelete.id)\n      personsService.deletePerson(personToDelete)\n      .then(() => {\n        setNotification(`Deleted ${personToDelete.name}`)\n        setSuccess(true)\n        setTimeout(() => {\n          setNotification(null)\n          setSuccess(false)\n        }, 3000)\n      })\n      .catch(error => {\n        setNotification(\n          `Information from ${personToDelete.name} has already been removed from the server`\n        )\n        setTimeout(() => {\n          setNotification(null)\n        }, 3000)\n        setPersons(persons.filter(person => person.id !== personToDelete.id))\n      })\n      setPersons(newPersons)\n    } else {\n      console.log(`${personToDelete.name} not removed`)\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification} success={success} />\n      <Filter nameFilter={nameFilter} setFilterName={setFilterName}/>\n      <h2>add a new</h2>\n      <PersonForm newName={newName} handleNameChange={handleNameChange}\n                  newNumber={newNumber} handleNumberChange={handleNumberChange}\n                  addPerson={addPerson} />\n      <h2>Numbers</h2>\n      <Persons persons={persons} nameFilter={nameFilter} deletePerson={deletePerson} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}